//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("mfinderModel", "history_action_fk", "action", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Model.action), "history", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Model.history), true)]
[assembly: EdmRelationshipAttribute("mfinderModel", "dpto_fk", "dpto", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Model.dpto), "user", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model.user))]
[assembly: EdmRelationshipAttribute("mfinderModel", "history_dpto_fk", "dpto", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Model.dpto), "history", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model.history))]
[assembly: EdmRelationshipAttribute("mfinderModel", "location_dpto_fk", "dpto", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Model.dpto), "location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model.location))]
[assembly: EdmRelationshipAttribute("mfinderModel", "location_machine_fk", "machine", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Model.machine), "location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model.location))]
[assembly: EdmRelationshipAttribute("mfinderModel", "location_technical_fk", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Model.user), "location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model.location))]
[assembly: EdmRelationshipAttribute("mfinderModel", "location_user_fk", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Model.user), "location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model.location))]
[assembly: EdmRelationshipAttribute("mfinderModel", "history_machine_fk", "machine", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Model.machine), "history", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model.history))]
[assembly: EdmRelationshipAttribute("mfinderModel", "role_fk", "role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Model.role), "user", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model.user))]
[assembly: EdmRelationshipAttribute("mfinderModel", "history_technical_fk", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Model.user), "history", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model.history))]
[assembly: EdmRelationshipAttribute("mfinderModel", "history_user_fk", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Model.user), "history", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model.history))]

#endregion

namespace Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class mfinderEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new mfinderEntities object using the connection string found in the 'mfinderEntities' section of the application configuration file.
        /// </summary>
        public mfinderEntities() : base("name=mfinderEntities", "mfinderEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new mfinderEntities object.
        /// </summary>
        public mfinderEntities(string connectionString) : base(connectionString, "mfinderEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new mfinderEntities object.
        /// </summary>
        public mfinderEntities(EntityConnection connection) : base(connection, "mfinderEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<action> actions
        {
            get
            {
                if ((_actions == null))
                {
                    _actions = base.CreateObjectSet<action>("actions");
                }
                return _actions;
            }
        }
        private ObjectSet<action> _actions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<dpto> dptoes
        {
            get
            {
                if ((_dptoes == null))
                {
                    _dptoes = base.CreateObjectSet<dpto>("dptoes");
                }
                return _dptoes;
            }
        }
        private ObjectSet<dpto> _dptoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<location> locations
        {
            get
            {
                if ((_locations == null))
                {
                    _locations = base.CreateObjectSet<location>("locations");
                }
                return _locations;
            }
        }
        private ObjectSet<location> _locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<machine> machines
        {
            get
            {
                if ((_machines == null))
                {
                    _machines = base.CreateObjectSet<machine>("machines");
                }
                return _machines;
            }
        }
        private ObjectSet<machine> _machines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<role> roles
        {
            get
            {
                if ((_roles == null))
                {
                    _roles = base.CreateObjectSet<role>("roles");
                }
                return _roles;
            }
        }
        private ObjectSet<role> _roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user> users
        {
            get
            {
                if ((_users == null))
                {
                    _users = base.CreateObjectSet<user>("users");
                }
                return _users;
            }
        }
        private ObjectSet<user> _users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<history> histories
        {
            get
            {
                if ((_histories == null))
                {
                    _histories = base.CreateObjectSet<history>("histories");
                }
                return _histories;
            }
        }
        private ObjectSet<history> _histories;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the actions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToactions(action action)
        {
            base.AddObject("actions", action);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the dptoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodptoes(dpto dpto)
        {
            base.AddObject("dptoes", dpto);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolocations(location location)
        {
            base.AddObject("locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the machines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomachines(machine machine)
        {
            base.AddObject("machines", machine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToroles(role role)
        {
            base.AddObject("roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousers(user user)
        {
            base.AddObject("users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the histories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTohistories(history history)
        {
            base.AddObject("histories", history);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mfinderModel", Name="action")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class action : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new action object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static action Createaction(global::System.Int32 id)
        {
            action action = new action();
            action.id = id;
            return action;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "history_action_fk", "history")]
        public history history
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<history>("mfinderModel.history_action_fk", "history").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<history>("mfinderModel.history_action_fk", "history").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<history> historyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<history>("mfinderModel.history_action_fk", "history");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<history>("mfinderModel.history_action_fk", "history", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mfinderModel", Name="dpto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dpto : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new dpto object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static dpto Createdpto(global::System.Int32 id, global::System.String name)
        {
            dpto dpto = new dpto();
            dpto.id = id;
            dpto.name = name;
            return dpto;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "dpto_fk", "user")]
        public EntityCollection<user> users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user>("mfinderModel.dpto_fk", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user>("mfinderModel.dpto_fk", "user", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "history_dpto_fk", "history")]
        public EntityCollection<history> histories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<history>("mfinderModel.history_dpto_fk", "history");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<history>("mfinderModel.history_dpto_fk", "history", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "location_dpto_fk", "location")]
        public EntityCollection<location> locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<location>("mfinderModel.location_dpto_fk", "location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<location>("mfinderModel.location_dpto_fk", "location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mfinderModel", Name="history")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class history : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new history object.
        /// </summary>
        /// <param name="action_fk">Initial value of the action_fk property.</param>
        public static history Createhistory(global::System.Int32 action_fk)
        {
            history history = new history();
            history.action_fk = action_fk;
            return history;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 action_fk
        {
            get
            {
                return _action_fk;
            }
            set
            {
                if (_action_fk != value)
                {
                    Onaction_fkChanging(value);
                    ReportPropertyChanging("action_fk");
                    _action_fk = StructuralObject.SetValidValue(value, "action_fk");
                    ReportPropertyChanged("action_fk");
                    Onaction_fkChanged();
                }
            }
        }
        private global::System.Int32 _action_fk;
        partial void Onaction_fkChanging(global::System.Int32 value);
        partial void Onaction_fkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comment
        {
            get
            {
                return _comment;
            }
            set
            {
                OncommentChanging(value);
                ReportPropertyChanging("comment");
                _comment = StructuralObject.SetValidValue(value, true, "comment");
                ReportPropertyChanged("comment");
                OncommentChanged();
            }
        }
        private global::System.String _comment;
        partial void OncommentChanging(global::System.String value);
        partial void OncommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> actionDate
        {
            get
            {
                return _actionDate;
            }
            set
            {
                OnactionDateChanging(value);
                ReportPropertyChanging("actionDate");
                _actionDate = StructuralObject.SetValidValue(value, "actionDate");
                ReportPropertyChanged("actionDate");
                OnactionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _actionDate;
        partial void OnactionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnactionDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "history_action_fk", "action")]
        public action action
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<action>("mfinderModel.history_action_fk", "action").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<action>("mfinderModel.history_action_fk", "action").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<action> actionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<action>("mfinderModel.history_action_fk", "action");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<action>("mfinderModel.history_action_fk", "action", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "history_dpto_fk", "dpto")]
        public dpto dpto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dpto>("mfinderModel.history_dpto_fk", "dpto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dpto>("mfinderModel.history_dpto_fk", "dpto").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<dpto> dptoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dpto>("mfinderModel.history_dpto_fk", "dpto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<dpto>("mfinderModel.history_dpto_fk", "dpto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "history_machine_fk", "machine")]
        public machine machine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<machine>("mfinderModel.history_machine_fk", "machine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<machine>("mfinderModel.history_machine_fk", "machine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<machine> machineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<machine>("mfinderModel.history_machine_fk", "machine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<machine>("mfinderModel.history_machine_fk", "machine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "history_technical_fk", "user")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("mfinderModel.history_technical_fk", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("mfinderModel.history_technical_fk", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("mfinderModel.history_technical_fk", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("mfinderModel.history_technical_fk", "user", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "history_user_fk", "user")]
        public user user1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("mfinderModel.history_user_fk", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("mfinderModel.history_user_fk", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> user1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("mfinderModel.history_user_fk", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("mfinderModel.history_user_fk", "user", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mfinderModel", Name="location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new location object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="loanDate">Initial value of the loanDate property.</param>
        public static location Createlocation(global::System.Int32 id, global::System.DateTime loanDate)
        {
            location location = new location();
            location.id = id;
            location.loanDate = loanDate;
            return location;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comment
        {
            get
            {
                return _comment;
            }
            set
            {
                OncommentChanging(value);
                ReportPropertyChanging("comment");
                _comment = StructuralObject.SetValidValue(value, true, "comment");
                ReportPropertyChanged("comment");
                OncommentChanged();
            }
        }
        private global::System.String _comment;
        partial void OncommentChanging(global::System.String value);
        partial void OncommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime loanDate
        {
            get
            {
                return _loanDate;
            }
            set
            {
                OnloanDateChanging(value);
                ReportPropertyChanging("loanDate");
                _loanDate = StructuralObject.SetValidValue(value, "loanDate");
                ReportPropertyChanged("loanDate");
                OnloanDateChanged();
            }
        }
        private global::System.DateTime _loanDate;
        partial void OnloanDateChanging(global::System.DateTime value);
        partial void OnloanDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> devolutionDate
        {
            get
            {
                return _devolutionDate;
            }
            set
            {
                OndevolutionDateChanging(value);
                ReportPropertyChanging("devolutionDate");
                _devolutionDate = StructuralObject.SetValidValue(value, "devolutionDate");
                ReportPropertyChanged("devolutionDate");
                OndevolutionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _devolutionDate;
        partial void OndevolutionDateChanging(Nullable<global::System.DateTime> value);
        partial void OndevolutionDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "location_dpto_fk", "dpto")]
        public dpto dpto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dpto>("mfinderModel.location_dpto_fk", "dpto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dpto>("mfinderModel.location_dpto_fk", "dpto").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<dpto> dptoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dpto>("mfinderModel.location_dpto_fk", "dpto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<dpto>("mfinderModel.location_dpto_fk", "dpto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "location_machine_fk", "machine")]
        public machine machine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<machine>("mfinderModel.location_machine_fk", "machine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<machine>("mfinderModel.location_machine_fk", "machine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<machine> machineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<machine>("mfinderModel.location_machine_fk", "machine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<machine>("mfinderModel.location_machine_fk", "machine", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "location_technical_fk", "user")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("mfinderModel.location_technical_fk", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("mfinderModel.location_technical_fk", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("mfinderModel.location_technical_fk", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("mfinderModel.location_technical_fk", "user", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "location_user_fk", "user")]
        public user user1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("mfinderModel.location_user_fk", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("mfinderModel.location_user_fk", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> user1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("mfinderModel.location_user_fk", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("mfinderModel.location_user_fk", "user", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mfinderModel", Name="machine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class machine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new machine object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="serialnumber">Initial value of the serialnumber property.</param>
        public static machine Createmachine(global::System.Int32 id, global::System.String serialnumber)
        {
            machine machine = new machine();
            machine.id = id;
            machine.serialnumber = serialnumber;
            return machine;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String model
        {
            get
            {
                return _model;
            }
            set
            {
                OnmodelChanging(value);
                ReportPropertyChanging("model");
                _model = StructuralObject.SetValidValue(value, true, "model");
                ReportPropertyChanged("model");
                OnmodelChanged();
            }
        }
        private global::System.String _model;
        partial void OnmodelChanging(global::System.String value);
        partial void OnmodelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String serialnumber
        {
            get
            {
                return _serialnumber;
            }
            set
            {
                OnserialnumberChanging(value);
                ReportPropertyChanging("serialnumber");
                _serialnumber = StructuralObject.SetValidValue(value, false, "serialnumber");
                ReportPropertyChanged("serialnumber");
                OnserialnumberChanged();
            }
        }
        private global::System.String _serialnumber;
        partial void OnserialnumberChanging(global::System.String value);
        partial void OnserialnumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> aquisitionDate
        {
            get
            {
                return _aquisitionDate;
            }
            set
            {
                OnaquisitionDateChanging(value);
                ReportPropertyChanging("aquisitionDate");
                _aquisitionDate = StructuralObject.SetValidValue(value, "aquisitionDate");
                ReportPropertyChanged("aquisitionDate");
                OnaquisitionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _aquisitionDate;
        partial void OnaquisitionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnaquisitionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> warrantyExpirationDate
        {
            get
            {
                return _warrantyExpirationDate;
            }
            set
            {
                OnwarrantyExpirationDateChanging(value);
                ReportPropertyChanging("warrantyExpirationDate");
                _warrantyExpirationDate = StructuralObject.SetValidValue(value, "warrantyExpirationDate");
                ReportPropertyChanged("warrantyExpirationDate");
                OnwarrantyExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _warrantyExpirationDate;
        partial void OnwarrantyExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnwarrantyExpirationDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "location_machine_fk", "location")]
        public EntityCollection<location> locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<location>("mfinderModel.location_machine_fk", "location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<location>("mfinderModel.location_machine_fk", "location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "history_machine_fk", "history")]
        public EntityCollection<history> histories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<history>("mfinderModel.history_machine_fk", "history");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<history>("mfinderModel.history_machine_fk", "history", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mfinderModel", Name="role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new role object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static role Createrole(global::System.Int32 id, global::System.String name)
        {
            role role = new role();
            role.id = id;
            role.name = name;
            return role;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "role_fk", "user")]
        public EntityCollection<user> users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user>("mfinderModel.role_fk", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user>("mfinderModel.role_fk", "user", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mfinderModel", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static user Createuser(global::System.Int32 id)
        {
            user user = new user();
            user.id = id;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String firstname
        {
            get
            {
                return _firstname;
            }
            set
            {
                OnfirstnameChanging(value);
                ReportPropertyChanging("firstname");
                _firstname = StructuralObject.SetValidValue(value, true, "firstname");
                ReportPropertyChanged("firstname");
                OnfirstnameChanged();
            }
        }
        private global::System.String _firstname;
        partial void OnfirstnameChanging(global::System.String value);
        partial void OnfirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ramal
        {
            get
            {
                return _ramal;
            }
            set
            {
                OnramalChanging(value);
                ReportPropertyChanging("ramal");
                _ramal = StructuralObject.SetValidValue(value, true, "ramal");
                ReportPropertyChanged("ramal");
                OnramalChanged();
            }
        }
        private global::System.String _ramal;
        partial void OnramalChanging(global::System.String value);
        partial void OnramalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true, "password");
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String lastname
        {
            get
            {
                return _lastname;
            }
            set
            {
                OnlastnameChanging(value);
                ReportPropertyChanging("lastname");
                _lastname = StructuralObject.SetValidValue(value, true, "lastname");
                ReportPropertyChanged("lastname");
                OnlastnameChanged();
            }
        }
        private global::System.String _lastname;
        partial void OnlastnameChanging(global::System.String value);
        partial void OnlastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value, "active");
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private Nullable<global::System.Int32> _active;
        partial void OnactiveChanging(Nullable<global::System.Int32> value);
        partial void OnactiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "dpto_fk", "dpto")]
        public dpto dpto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dpto>("mfinderModel.dpto_fk", "dpto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dpto>("mfinderModel.dpto_fk", "dpto").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<dpto> dptoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dpto>("mfinderModel.dpto_fk", "dpto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<dpto>("mfinderModel.dpto_fk", "dpto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "location_technical_fk", "location")]
        public EntityCollection<location> locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<location>("mfinderModel.location_technical_fk", "location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<location>("mfinderModel.location_technical_fk", "location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "location_user_fk", "location")]
        public EntityCollection<location> locations1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<location>("mfinderModel.location_user_fk", "location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<location>("mfinderModel.location_user_fk", "location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "role_fk", "role")]
        public role role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<role>("mfinderModel.role_fk", "role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<role>("mfinderModel.role_fk", "role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<role> roleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<role>("mfinderModel.role_fk", "role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<role>("mfinderModel.role_fk", "role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "history_technical_fk", "history")]
        public EntityCollection<history> histories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<history>("mfinderModel.history_technical_fk", "history");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<history>("mfinderModel.history_technical_fk", "history", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mfinderModel", "history_user_fk", "history")]
        public EntityCollection<history> histories1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<history>("mfinderModel.history_user_fk", "history");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<history>("mfinderModel.history_user_fk", "history", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
